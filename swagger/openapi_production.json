{
  "openapi": "3.0.1",
  "info": {
    "title": "DMTools API",
    "description": "DMTools Server API for presentation generation, job execution, and development management tools.\n\n**Authentication Required**: Most endpoints require authentication. Please authenticate using one of the OAuth2 providers or JWT token below.",
    "contact": {
      "name": "DMTools Team",
      "url": "https://github.com/IstiN/dmtools",
      "email": "uladzimir.klyshevich@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "v1.0"
  },
  "servers": [
    {
      "url": "https://dmtools-431977789017.us-central1.run.app",
      "description": "Local server"
    },
    {
      "url": "https://api.dmtools.example.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "oauth2_google": []
    },
    {
      "oauth2_github": []
    },
    {
      "oauth2_microsoft": []
    },
    {
      "bearer_jwt": []
    }
  ],
  "tags": [
    {
      "name": "Job Configurations",
      "description": "API for managing saved job configurations"
    },
    {
      "name": "Job Execution",
      "description": "API for server-managed job execution with integrated credential resolution"
    },
    {
      "name": "Job Management",
      "description": "API for executing jobs and managing configuration"
    },
    {
      "name": "Integrations",
      "description": "API for managing integrations with external systems"
    },
    {
      "name": "MCP Configurations",
      "description": "API for managing Model Context Protocol (MCP) configurations and integrations"
    }
  ],
  "paths": {
    "/api/v1/job-configurations/{id}": {
      "get": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Get job configuration by ID",
        "description": "Retrieve a specific job configuration by its ID",
        "operationId": "getJobConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Job configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobConfigurationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Update job configuration",
        "description": "Update an existing job configuration",
        "operationId": "updateJobConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Job configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobConfigurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobConfigurationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Delete job configuration",
        "description": "Delete a job configuration by its ID",
        "operationId": "deleteJobConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Job configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/settings/user/{userId}/{key}": {
      "get": {
        "tags": [
          "user-settings-controller"
        ],
        "operationId": "getUserSetting",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "defaultValue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-settings-controller"
        ],
        "operationId": "updateUserSetting",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/mcp/configurations/{configId}": {
      "get": {
        "tags": [
          "MCP Configurations"
        ],
        "summary": "Get MCP configuration",
        "description": "Get specific MCP configuration details",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "Configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "MCP configuration retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Configuration not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "MCP Configurations"
        ],
        "summary": "Update MCP configuration",
        "description": "Update existing MCP configuration",
        "operationId": "updateConfiguration",
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "Configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMcpConfigurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "MCP configuration updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Configuration not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation errors",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MCP Configurations"
        ],
        "summary": "Delete MCP configuration",
        "description": "Delete MCP configuration",
        "operationId": "deleteConfiguration",
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "Configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Configuration not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "MCP configuration deleted successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get integration by ID",
        "description": "Retrieves a specific integration by its ID",
        "operationId": "getIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeSensitive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Integration not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "200": {
            "description": "Integration retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Integrations"
        ],
        "summary": "Update integration",
        "description": "Updates an existing integration",
        "operationId": "updateIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Integration updated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Delete integration",
        "description": "Deletes an existing integration",
        "operationId": "deleteIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Integration not found"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "Integration deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/integrations/{id}/enable": {
      "put": {
        "tags": [
          "Integrations"
        ],
        "summary": "Enable integration",
        "description": "Enables an integration",
        "operationId": "enableIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration enabled successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}/disable": {
      "put": {
        "tags": [
          "Integrations"
        ],
        "summary": "Disable integration",
        "description": "Disables an integration",
        "operationId": "disableIntegration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Integration not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "200": {
            "description": "Integration disabled successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/shutdown": {
      "post": {
        "tags": [
          "web-controller"
        ],
        "operationId": "shutdown",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/mcp": {
      "post": {
        "tags": [
          "dynamic-mcp-controller"
        ],
        "operationId": "handleMcpRequest",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/workspaces": {
      "get": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "getUserWorkspaces",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "createWorkspace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/workspaces/{workspaceId}/share": {
      "post": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "shareWorkspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareWorkspaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workspaces/default": {
      "post": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "createDefaultWorkspace",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/execute": {
      "post": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Execute a job in server-managed mode (async)",
        "description": "Starts asynchronous job execution with server-managed integration resolution and credential injection. Returns execution ID immediately.",
        "operationId": "executeJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobExecutionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Job execution started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobExecutionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Job execution failed to start",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/configurations/{configId}/execute": {
      "post": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Execute a saved job configuration (async)",
        "description": "Starts asynchronous execution of a saved job configuration by ID with optional parameter overrides. Returns execution ID immediately.",
        "operationId": "executeSavedJobConfiguration",
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "Job configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteJobConfigurationRequest"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Job configuration not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Job execution started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobExecutionResponse"
                }
              }
            }
          },
          "500": {
            "description": "Job execution failed to start",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/job-configurations": {
      "get": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Get all job configurations",
        "description": "Retrieve all job configurations accessible to the authenticated user",
        "operationId": "getJobConfigurations",
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "description": "Only return enabled configurations",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobConfigurationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Create a new job configuration",
        "description": "Create a new saved job configuration",
        "operationId": "createJobConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobConfigurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobConfigurationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/job-configurations/{id}/webhook": {
      "post": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Webhook endpoint for job execution",
        "description": "Execute a saved job configuration via webhook with optional parameter overrides",
        "operationId": "executeJobConfigurationWebhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Job configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-API-Key",
            "in": "header",
            "description": "API key for authentication (future enhancement)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteJobConfigurationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Job execution started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Job configuration not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Job execution failed to start",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/job-configurations/{id}/execute": {
      "post": {
        "tags": [
          "Job Configurations"
        ],
        "summary": "Execute a saved job configuration",
        "description": "Execute a saved job configuration with optional parameter overrides",
        "operationId": "getExecutionParameters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Job configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteJobConfigurationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionParametersDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/simple": {
      "post": {
        "tags": [
          "chat-controller"
        ],
        "operationId": "simpleChat",
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/completions": {
      "post": {
        "tags": [
          "chat-controller"
        ],
        "operationId": "chatCompletions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/completions-with-files": {
      "post": {
        "tags": [
          "chat-controller"
        ],
        "operationId": "chatCompletionsWithFiles",
        "parameters": [
          {
            "name": "chatRequest",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/orchestrators/execute": {
      "post": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "executeOrchestrator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentExecutionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentExecutionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/orchestrators/execute/{orchestratorName}": {
      "post": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "executeOrchestratorByPath",
        "parameters": [
          {
            "name": "orchestratorName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentExecutionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/execute": {
      "post": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "executeAgent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentExecutionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentExecutionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/execute/{agentName}": {
      "post": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "executeAgentByPath",
        "parameters": [
          {
            "name": "agentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentExecutionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/settings/user/{userId}": {
      "get": {
        "tags": [
          "user-settings-controller"
        ],
        "operationId": "getUserSettings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-settings-controller"
        ],
        "operationId": "updateUserSettings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/presentation/script": {
      "post": {
        "tags": [
          "presentation-app-controller"
        ],
        "operationId": "generateScript_1",
        "parameters": [
          {
            "name": "userRequest",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScriptGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/javascript": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/presentation/generate": {
      "post": {
        "tags": [
          "presentation-app-controller"
        ],
        "operationId": "generatePresentation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratePresentationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth-proxy/initiate": {
      "post": {
        "tags": [
          "o-auth-proxy-controller"
        ],
        "operationId": "initiateOAuth",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthInitiateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth-proxy/exchange": {
      "post": {
        "tags": [
          "o-auth-proxy-controller"
        ],
        "operationId": "exchangeCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthExchangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/mcp/configurations": {
      "get": {
        "tags": [
          "MCP Configurations"
        ],
        "summary": "Get MCP configurations",
        "description": "Retrieve all MCP configurations for authenticated user",
        "operationId": "getConfigurations",
        "responses": {
          "200": {
            "description": "List of user's MCP configurations",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/McpConfigurationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/McpConfigurationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MCP Configurations"
        ],
        "summary": "Create MCP configuration",
        "description": "Create new MCP configuration (pass integration IDs for MCP)",
        "operationId": "createConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMcpConfigurationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "MCP configuration created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation errors or duplicate name",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get all integrations",
        "description": "Retrieves all integrations accessible to the current user",
        "operationId": "getIntegrations",
        "responses": {
          "200": {
            "description": "List of integrations retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Create integration",
        "description": "Creates a new integration",
        "operationId": "createIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Integration created successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}/workspaces": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Share integration with workspace",
        "description": "Shares an integration with a workspace",
        "operationId": "shareWithWorkspace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareIntegrationWithWorkspaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Integration shared with workspace successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          },
          "404": {
            "description": "Integration or workspace not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}/users": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Share integration with user",
        "description": "Shares an integration with another user",
        "operationId": "shareWithUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            }
          },
          "200": {
            "description": "Integration shared successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            }
          },
          "404": {
            "description": "Integration or user not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}/usage": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Record integration usage",
        "description": "Records usage of an integration",
        "operationId": "recordUsage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Integration not found"
          },
          "200": {
            "description": "Usage recorded successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/integrations/test": {
      "post": {
        "tags": [
          "Integrations"
        ],
        "summary": "Test integration",
        "description": "Tests an integration connection with provided configuration",
        "operationId": "testIntegration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestIntegrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Test completed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/executeJob": {
      "post": {
        "tags": [
          "Job Management"
        ],
        "summary": "Execute a job",
        "description": "Executes a job with the provided parameters",
        "operationId": "executeJob_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Job parameters as JSON"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Job executed successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/local-login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "localLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/mcp/tools/{userId}": {
      "get": {
        "tags": [
          "dynamic-mcp-controller"
        ],
        "operationId": "getUserTools",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mcp/health": {
      "get": {
        "tags": [
          "dynamic-mcp-controller"
        ],
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/is-local": {
      "get": {
        "tags": [
          "web-controller"
        ],
        "operationId": "isLocal",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/workspaces/{workspaceId}": {
      "get": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "getWorkspaceById",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "deleteWorkspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/v1/jobs/{jobName}/integrations": {
      "get": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Get required integrations for a job",
        "description": "Returns the list of integrations required for the specified job",
        "operationId": "getRequiredIntegrations",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the job",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved required integrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/types": {
      "get": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Get job types",
        "description": "Returns detailed information about available job types including parameters and descriptions",
        "operationId": "getJobTypes",
        "responses": {
          "200": {
            "description": "Successfully retrieved job types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/types/{jobName}": {
      "get": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Get job type details",
        "description": "Returns detailed information about a specific job type",
        "operationId": "getJobType",
        "parameters": [
          {
            "name": "jobName",
            "in": "path",
            "description": "Name of the job type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Job type not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved job type details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/executions/{executionId}/status": {
      "get": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Get job execution status",
        "description": "Get the current status and details of a job execution by its execution ID",
        "operationId": "getJobExecutionStatus",
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "Job execution ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job execution status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobExecutionStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job execution not found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Access denied to job execution",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/jobs/available": {
      "get": {
        "tags": [
          "Job Execution"
        ],
        "summary": "Get available jobs",
        "description": "Returns the list of jobs available for server-managed execution",
        "operationId": "getAvailableJobs",
        "responses": {
          "200": {
            "description": "Successfully retrieved available jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/chat/health": {
      "get": {
        "tags": [
          "chat-controller"
        ],
        "operationId": "health_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/orchestrators": {
      "get": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "getAvailableOrchestrators",
        "parameters": [
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/orchestrators/{orchestratorName}/info": {
      "get": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "getOrchestratorInfo",
        "parameters": [
          {
            "name": "orchestratorName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/health": {
      "get": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "health_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/available": {
      "get": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "getAvailableAgentsAndOrchestrators",
        "parameters": [
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/agents": {
      "get": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "getAvailableAgents",
        "parameters": [
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents/agents/{agentName}/info": {
      "get": {
        "tags": [
          "agent-controller"
        ],
        "operationId": "getAgentInfo",
        "parameters": [
          {
            "name": "agentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AgentInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/presentation/health": {
      "get": {
        "tags": [
          "presentation-app-controller"
        ],
        "operationId": "health_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/oauth-proxy/providers": {
      "get": {
        "tags": [
          "o-auth-proxy-controller"
        ],
        "operationId": "getProviders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/mcp/configurations/{configId}/access-code": {
      "get": {
        "tags": [
          "MCP Configurations"
        ],
        "summary": "Generate access code",
        "description": "Generate configuration code for external tools",
        "operationId": "generateAccessCode",
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "Configuration ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Output format for the configuration code",
            "required": false,
            "schema": {
              "type": "string",
              "default": "cursor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access code generated successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid format specified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Configuration not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/workspace/{workspaceId}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get workspace integrations",
        "description": "Retrieves all integrations for a specific workspace",
        "operationId": "getWorkspaceIntegrations",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of integrations retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Workspace not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/types": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get integration types",
        "description": "Retrieves all available integration types",
        "operationId": "getIntegrationTypes",
        "responses": {
          "200": {
            "description": "Integration types retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationTypeDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/types/{type}/schema": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get integration type schema",
        "description": "Retrieves the configuration schema for a specific integration type",
        "operationId": "getIntegrationTypeSchema",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schema retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTypeDto"
                }
              }
            }
          },
          "404": {
            "description": "Integration type not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTypeDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationTypeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/types/{type}/documentation": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "summary": "Get integration setup documentation",
        "description": "Retrieves the setup documentation content for a specific integration type",
        "operationId": "getIntegrationDocumentation",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Integration type or documentation not found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Documentation retrieved successfully",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "health_4",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health/simple": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "simpleHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/health": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "rootHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/environment": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "environment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health/database": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "databaseHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health/cloudsql": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "cloudSqlHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health/_ah/health": {
      "get": {
        "tags": [
          "health-controller"
        ],
        "operationId": "appEngineHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "tags": [
          "Job Management"
        ],
        "summary": "Get configuration",
        "description": "Retrieves non-sensitive application properties and configuration",
        "operationId": "getConfiguration_1",
        "responses": {
          "200": {
            "description": "Configuration retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/user": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/test-jwt": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "testJwt",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/simple-test": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "simpleTest",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/public-test": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "publicTest",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login/{provider}": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "initiateLogin",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/is-local": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "isLocal_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/callback/{provider}": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "handleCallback",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/basic-test": {
      "get": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "basicTest",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/workspaces/{workspaceId}/users/{targetUserId}": {
      "delete": {
        "tags": [
          "workspace-controller"
        ],
        "operationId": "removeUserFromWorkspace",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/{id}/workspaces/{workspaceId}": {
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Remove from workspace",
        "description": "Removes an integration from a workspace",
        "operationId": "removeFromWorkspace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration removed from workspace successfully"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Integration or workspace not found"
          }
        }
      }
    },
    "/api/integrations/{id}/users/{userId}": {
      "delete": {
        "tags": [
          "Integrations"
        ],
        "summary": "Remove user access",
        "description": "Removes a user's access to an integration",
        "operationId": "removeUserAccess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User access removed successfully"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Integration or user not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "JsonNode": {
        "type": "object"
      },
      "UpdateJobConfigurationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "jobType": {
            "type": "string"
          },
          "jobParameters": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "integrationMappings": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "description": "Job configuration update request"
      },
      "JobConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "jobType": {
            "type": "string"
          },
          "createdById": {
            "type": "string"
          },
          "createdByName": {
            "type": "string"
          },
          "createdByEmail": {
            "type": "string"
          },
          "jobParameters": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "integrationMappings": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "enabled": {
            "type": "boolean"
          },
          "executionCount": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastExecutedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateMcpConfigurationRequest": {
        "required": [
          "integrationIds",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Name for the MCP configuration",
            "example": "Development MCP"
          },
          "integrationIds": {
            "type": "array",
            "description": "List of integration IDs to enable",
            "example": [
              "integration-uuid-1",
              "integration-uuid-2"
            ],
            "items": {
              "type": "string",
              "description": "List of integration IDs to enable",
              "example": "[\"integration-uuid-1\",\"integration-uuid-2\"]"
            }
          }
        },
        "description": "Request to create a new MCP configuration"
      },
      "ConfigParam": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "sensitive": {
            "type": "boolean"
          }
        }
      },
      "UpdateIntegrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "configParams": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConfigParam"
            }
          }
        }
      },
      "IntegrationConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "paramKey": {
            "type": "string"
          },
          "paramValue": {
            "type": "string"
          },
          "sensitive": {
            "type": "boolean"
          }
        }
      },
      "IntegrationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "createdById": {
            "type": "string"
          },
          "createdByName": {
            "type": "string"
          },
          "createdByEmail": {
            "type": "string"
          },
          "usageCount": {
            "type": "integer",
            "format": "int64"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsedAt": {
            "type": "string",
            "format": "date-time"
          },
          "configParams": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationConfigDto"
            }
          },
          "workspaces": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceDto"
            }
          },
          "users": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationUserDto"
            }
          }
        }
      },
      "IntegrationUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "userEmail": {
            "type": "string"
          },
          "userPictureUrl": {
            "type": "string"
          },
          "permissionLevel": {
            "type": "string",
            "enum": [
              "READ",
              "WRITE",
              "ADMIN"
            ]
          },
          "addedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WorkspaceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "users": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkspaceUserDto"
            }
          },
          "description": {
            "type": "string"
          },
          "ownerName": {
            "type": "string"
          },
          "ownerEmail": {
            "type": "string"
          },
          "currentUserRole": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WorkspaceUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ]
          }
        }
      },
      "CreateWorkspaceRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ShareWorkspaceRequest": {
        "required": [
          "email",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER"
            ]
          }
        }
      },
      "JSONObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          }
        }
      },
      "JobExecutionRequest": {
        "type": "object",
        "properties": {
          "jobName": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/JSONObject"
          },
          "requiredIntegrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Job execution request"
      },
      "JobExecutionResponse": {
        "type": "object",
        "properties": {
          "executionId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "RUNNING",
              "COMPLETED",
              "FAILED",
              "CANCELLED"
            ]
          },
          "jobName": {
            "type": "string"
          },
          "jobConfigurationId": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "estimatedCompletionAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ExecuteJobConfigurationRequest": {
        "type": "object",
        "properties": {
          "parameterOverrides": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "integrationOverrides": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "executionMode": {
            "type": "string"
          }
        },
        "description": "Execution request with optional overrides"
      },
      "CreateJobConfigurationRequest": {
        "required": [
          "integrationMappings",
          "jobParameters",
          "jobType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "jobType": {
            "type": "string"
          },
          "jobParameters": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "integrationMappings": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "description": "Job configuration creation request"
      },
      "ExecutionParametersDto": {
        "type": "object",
        "properties": {
          "jobType": {
            "type": "string"
          },
          "jobParameters": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "integrationMappings": {
            "$ref": "#/components/schemas/JsonNode"
          },
          "executionMode": {
            "type": "string"
          }
        }
      },
      "AgentExecutionResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object"
          },
          "agentName": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          },
          "executionType": {
            "type": "string"
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/ResponseSource"
          },
          "agentExecutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentExecutionResponse"
            }
          }
        }
      },
      "ResponseSource": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AgentToolsConfig": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "availableAgents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "availableOrchestrators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChatMessage": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fileNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatMessage"
            }
          },
          "model": {
            "type": "string"
          },
          "agentTools": {
            "$ref": "#/components/schemas/AgentToolsConfig"
          }
        }
      },
      "AgentExecutionRequest": {
        "type": "object",
        "properties": {
          "agentName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "ScriptGenerationRequest": {
        "type": "object",
        "properties": {
          "userRequest": {
            "type": "string"
          }
        }
      },
      "GeneratePresentationRequest": {
        "type": "object",
        "properties": {
          "jsScript": {
            "type": "string"
          },
          "paramsForJs": {
            "$ref": "#/components/schemas/JsonNode"
          }
        }
      },
      "OAuthInitiateRequest": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "client_redirect_uri": {
            "type": "string"
          },
          "client_type": {
            "type": "string"
          }
        }
      },
      "OAuthExchangeRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "CreateIntegrationRequest": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "configParams": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConfigParam"
            }
          }
        }
      },
      "ShareIntegrationWithWorkspaceRequest": {
        "required": [
          "workspaceId"
        ],
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string"
          }
        }
      },
      "ShareIntegrationRequest": {
        "required": [
          "permissionLevel",
          "userEmail"
        ],
        "type": "object",
        "properties": {
          "userEmail": {
            "type": "string"
          },
          "permissionLevel": {
            "type": "string",
            "enum": [
              "READ",
              "WRITE",
              "ADMIN"
            ]
          }
        }
      },
      "TestIntegrationRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "configParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ConfigParamDefinition": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "sensitive": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JobTypeDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "setupDocumentationUrl": {
            "type": "string"
          },
          "executionModes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requiredIntegrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "optionalIntegrations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "configParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigParamDefinition"
            }
          }
        }
      },
      "JobExecutionStatusResponse": {
        "type": "object",
        "properties": {
          "executionId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "RUNNING",
              "COMPLETED",
              "FAILED",
              "CANCELLED"
            ]
          },
          "jobName": {
            "type": "string"
          },
          "jobConfigurationId": {
            "type": "string"
          },
          "jobConfigurationName": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "threadName": {
            "type": "string"
          },
          "durationMillis": {
            "type": "integer",
            "format": "int64"
          },
          "resultSummary": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionParameters": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "completed": {
            "type": "boolean"
          }
        }
      },
      "AgentInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "AGENT",
              "ORCHESTRATOR"
            ]
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterInfo"
            }
          },
          "returnInfo": {
            "$ref": "#/components/schemas/ReturnInfo"
          }
        }
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "defaultValue": {
            "type": "object"
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "example": {
            "type": "string"
          }
        }
      },
      "ReturnInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "schema": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "example": {
            "type": "string"
          }
        }
      },
      "AgentListResponse": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orchestrators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "detailedAgents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentInfo"
            }
          },
          "detailedOrchestrators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentInfo"
            }
          },
          "detailed": {
            "type": "boolean"
          }
        }
      },
      "McpConfigurationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique configuration identifier",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "name": {
            "type": "string",
            "description": "User-defined name for the configuration",
            "example": "Development MCP"
          },
          "userId": {
            "type": "string",
            "description": "Owner user ID",
            "example": "user-123"
          },
          "integrationIds": {
            "type": "array",
            "description": "List of enabled integration IDs",
            "items": {
              "type": "string",
              "description": "List of enabled integration IDs"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Configuration creation timestamp",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Configuration last update timestamp",
            "format": "date-time"
          }
        },
        "description": "MCP Configuration information"
      },
      "IntegrationTypeDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "iconUrl": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "setupDocumentationUrl": {
            "type": "string"
          },
          "configParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigParamDefinition"
            }
          },
          "supportsMcp": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2_google": {
        "type": "oauth2",
        "description": "Google OAuth2 Authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://dmtools-431977789017.us-central1.run.app/oauth2/authorization/google",
            "tokenUrl": "https://dmtools-431977789017.us-central1.run.app/login/oauth2/code/google",
            "scopes": {
              "openid": "OpenID Connect",
              "profile": "Read user profile",
              "email": "Read user email"
            }
          }
        }
      },
      "oauth2_github": {
        "type": "oauth2",
        "description": "GitHub OAuth2 Authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://dmtools-431977789017.us-central1.run.app/oauth2/authorization/github",
            "tokenUrl": "https://dmtools-431977789017.us-central1.run.app/login/oauth2/code/github",
            "scopes": {
              "read:user": "Read user profile",
              "user:email": "Read user email"
            }
          }
        }
      },
      "oauth2_microsoft": {
        "type": "oauth2",
        "description": "Microsoft OAuth2 Authentication",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://dmtools-431977789017.us-central1.run.app/oauth2/authorization/microsoft",
            "tokenUrl": "https://dmtools-431977789017.us-central1.run.app/login/oauth2/code/microsoft",
            "scopes": {
              "openid": "OpenID Connect",
              "profile": "Read user profile",
              "email": "Read user email"
            }
          }
        }
      },
      "bearer_jwt": {
        "type": "http",
        "description": "JWT Bearer Token Authentication",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
