name: AI Code Assistance

on:
  workflow_dispatch:
    inputs:
      user_request:
        description: 'Your request for AI code assistance'
        required: true
        type: string
      target_files:
        description: 'Files to analyze (comma-separated, optional)'
        required: false
        type: string
        default: ''
      model:
        description: 'AI model to use with Aider'
        required: false
        type: choice
        default: 'gemini/gemini-2.5-flash-preview-05-20'
        options:
          - gemini/gemini-2.5-flash-preview-05-20
          - gemini/gemini-2.0-flash-exp
          - gemini/gemini-1.5-pro-latest
      max_tokens:
        description: 'Maximum tokens for context'
        required: false
        type: number
        default: 1000000
      enable_debug_logging:
        description: 'Enable comprehensive debug logging'
        required: false
        type: boolean
        default: true
      flutter_component_focus:
        description: 'Focus assistance on Flutter component type'
        required: false
        type: choice
        default: 'general'
        options:
          - general
          - widgets
          - providers
          - screens
          - styleguide
          - network-layer
          - tests

permissions:
  contents: read
  issues: write

jobs:
  ai-assistance:
    name: AI Code Assistance
    uses: IstiN/dmtools-agentic-workflows/.github/workflows/reusable-aider-assist.yml@main
    with:
      user_request: ${{ inputs.user_request }}
      target_files: ${{ inputs.target_files }}
      model: ${{ inputs.model }}
      max_tokens: ${{ inputs.max_tokens }}
      enable_debug_logging: ${{ inputs.enable_debug_logging }}
      
      # Flutter-specific customizations
      custom_assist_prompt: '.github/ai-prompts/flutter-assist-prompt.md'
      custom_rules_file: '@commonrules.mdc'
      additional_context_files: >-
        README.md,
        pubspec.yaml,
        analysis_options.yaml,
        flutter_styleguide/README.md,
        lib/service_locator.dart
      
      # Use specific version for stability
      workflows_repo: 'IstiN/dmtools-agentic-workflows'
      workflows_ref: 'main'
      
    secrets:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

  flutter-assistance-context:
    name: Flutter Assistance Context
    needs: ai-assistance
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: "3.32.x"
        channel: "stable"
        cache: true
        
    - name: Analyze assistance context
      run: |
        echo "🤖 Analyzing Flutter assistance context..."
        
        # Determine target files if not specified
        if [ -z "${{ inputs.target_files }}" ]; then
          echo "🔍 No specific files specified, analyzing by focus area: ${{ inputs.flutter_component_focus }}"
          
          case "${{ inputs.flutter_component_focus }}" in
            "widgets")
              TARGET_PATTERN="lib/widgets/**/*.dart"
              echo "📱 Focus: Custom widget components"
              ;;
            "providers")
              TARGET_PATTERN="lib/providers/**/*.dart"
              echo "🔄 Focus: State management providers"
              ;;
            "screens")
              TARGET_PATTERN="lib/screens/**/*.dart"
              echo "📱 Focus: Screen/page components"
              ;;
            "styleguide")
              TARGET_PATTERN="flutter_styleguide/lib/**/*.dart"
              echo "🎨 Focus: Styleguide components"
              ;;
            "network-layer")
              TARGET_PATTERN="lib/network/**/*.dart"
              echo "🌐 Focus: Network and API layer"
              ;;
            "tests")
              TARGET_PATTERN="test/**/*.dart flutter_styleguide/test/**/*.dart"
              echo "🧪 Focus: Test files"
              ;;
            *)
              TARGET_PATTERN="lib/**/*.dart"
              echo "🔍 Focus: General Flutter code"
              ;;
          esac
          
          echo "📂 Target pattern: $TARGET_PATTERN"
        else
          echo "📁 Specific files targeted: ${{ inputs.target_files }}"
        fi
        
        # Quick Flutter-specific validation
        echo ""
        echo "⚡ Flutter Quick Validation:"
        
        # Check if analysis would benefit from Flutter context
        if [ -f "pubspec.yaml" ]; then
          echo "  ✅ pubspec.yaml found - dependency context available"
        fi
        
        if [ -f "analysis_options.yaml" ]; then
          echo "  ✅ analysis_options.yaml found - linting rules context available"
        fi
        
        if [ -d "flutter_styleguide" ]; then
          echo "  ✅ Styleguide found - component library context available"
        fi
        
        if [ -f "lib/service_locator.dart" ]; then
          echo "  ✅ Service locator found - dependency injection context available"
        fi
        
    - name: Flutter Assistance Summary
      run: |
        echo "## 🤖 AI Assistance Summary - Flutter Project" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### 📱 Assistance Context" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Focus Area**: ${{ inputs.flutter_component_focus }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Model Used**: ${{ inputs.model }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Max Tokens**: ${{ inputs.max_tokens }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -n "${{ inputs.target_files }}" ]; then
          echo "- **Target Files**: ${{ inputs.target_files }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Target Files**: Auto-selected based on focus area" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.ai-assistance.result }}" = "success" ]; then
          echo "### ✅ Assistance Completed Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          case "${{ inputs.flutter_component_focus }}" in
            "widgets")
              echo "#### 📱 Widget Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant analyzed your Flutter widget components including:" >> $GITHUB_STEP_SUMMARY
              echo "- Widget composition and structure" >> $GITHUB_STEP_SUMMARY
              echo "- State management patterns" >> $GITHUB_STEP_SUMMARY
              echo "- Performance optimization opportunities" >> $GITHUB_STEP_SUMMARY
              echo "- UI/UX best practices adherence" >> $GITHUB_STEP_SUMMARY
              ;;
            "providers")
              echo "#### 🔄 Provider Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant analyzed your state management providers including:" >> $GITHUB_STEP_SUMMARY
              echo "- Provider architecture and patterns" >> $GITHUB_STEP_SUMMARY
              echo "- State synchronization and data flow" >> $GITHUB_STEP_SUMMARY
              echo "- Performance and memory considerations" >> $GITHUB_STEP_SUMMARY
              echo "- Integration with service locator" >> $GITHUB_STEP_SUMMARY
              ;;
            "screens")
              echo "#### 📱 Screen Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant analyzed your screen/page components including:" >> $GITHUB_STEP_SUMMARY
              echo "- Navigation patterns and routing" >> $GITHUB_STEP_SUMMARY
              echo "- Screen state management" >> $GITHUB_STEP_SUMMARY
              echo "- Responsive design implementation" >> $GITHUB_STEP_SUMMARY
              echo "- User experience flow optimization" >> $GITHUB_STEP_SUMMARY
              ;;
            "styleguide")
              echo "#### 🎨 Styleguide Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant analyzed your styleguide components including:" >> $GITHUB_STEP_SUMMARY
              echo "- Component library organization" >> $GITHUB_STEP_SUMMARY
              echo "- Design system consistency" >> $GITHUB_STEP_SUMMARY
              echo "- Theme and styling patterns" >> $GITHUB_STEP_SUMMARY
              echo "- Component reusability and documentation" >> $GITHUB_STEP_SUMMARY
              ;;
            "network-layer")
              echo "#### 🌐 Network Layer Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant analyzed your network and API layer including:" >> $GITHUB_STEP_SUMMARY
              echo "- API client architecture and patterns" >> $GITHUB_STEP_SUMMARY
              echo "- Error handling and retry mechanisms" >> $GITHUB_STEP_SUMMARY
              echo "- Data serialization and mapping" >> $GITHUB_STEP_SUMMARY
              echo "- Authentication and authorization flow" >> $GITHUB_STEP_SUMMARY
              ;;
            "tests")
              echo "#### 🧪 Test Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant analyzed your test suite including:" >> $GITHUB_STEP_SUMMARY
              echo "- Test coverage and organization" >> $GITHUB_STEP_SUMMARY
              echo "- Widget testing patterns" >> $GITHUB_STEP_SUMMARY
              echo "- Golden test maintenance" >> $GITHUB_STEP_SUMMARY
              echo "- Integration and unit test balance" >> $GITHUB_STEP_SUMMARY
              ;;
            *)
              echo "#### 🔍 General Analysis Completed" >> $GITHUB_STEP_SUMMARY
              echo "The AI assistant provided general Flutter code assistance including:" >> $GITHUB_STEP_SUMMARY
              echo "- Code quality and best practices review" >> $GITHUB_STEP_SUMMARY
              echo "- Architecture and design pattern analysis" >> $GITHUB_STEP_SUMMARY
              echo "- Performance optimization suggestions" >> $GITHUB_STEP_SUMMARY
              echo "- Flutter framework usage optimization" >> $GITHUB_STEP_SUMMARY
              ;;
          esac
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Recommended Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **Review Suggestions**: Examine the AI assistant's recommendations" >> $GITHUB_STEP_SUMMARY
          echo "2. **Test Changes**: If code modifications were suggested, test thoroughly" >> $GITHUB_STEP_SUMMARY
          echo "3. **Run Flutter Analysis**: Execute \`flutter analyze\` to check for issues" >> $GITHUB_STEP_SUMMARY
          echo "4. **Update Tests**: Modify tests if component behavior changed" >> $GITHUB_STEP_SUMMARY
          echo "5. **Validate Golden Tests**: Update golden test images if UI changed" >> $GITHUB_STEP_SUMMARY
          
        else
          echo "### ❌ Assistance Issues" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The AI assistance encountered issues. Common Flutter-related problems:" >> $GITHUB_STEP_SUMMARY
          echo "- Code complexity exceeding model context limits" >> $GITHUB_STEP_SUMMARY
          echo "- Flutter-specific patterns not recognized by the model" >> $GITHUB_STEP_SUMMARY
          echo "- Large file sizes requiring more focused target selection" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Recommendations**:" >> $GITHUB_STEP_SUMMARY
          echo "- Try with fewer, more specific target files" >> $GITHUB_STEP_SUMMARY
          echo "- Use a more focused component focus area" >> $GITHUB_STEP_SUMMARY
          echo "- Break down complex requests into smaller parts" >> $GITHUB_STEP_SUMMARY
        fi
