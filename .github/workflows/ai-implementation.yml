name: AI Code Implementation

on:
  workflow_dispatch:
    inputs:
      user_request:
        description: 'Your coding request for AI implementation'
        required: true
        type: string
      model:
        description: 'Gemini model to use'
        required: false
        type: choice
        default: 'gemini-2.5-flash-preview-05-20'
        options:
          - gemini-2.0-flash-exp
          - gemini-1.5-pro-latest
          - gemini-1.5-flash-latest
          - gemini-1.0-pro-latest
          - gemini-2.5-flash-preview-05-20
          - gemini-2.5-pro-latest
      pr_base_branch:
        description: 'Base branch for the pull request'
        required: false
        type: string
        default: 'main'
      enable_debug_logging:
        description: 'Enable comprehensive debug logging for AI implementation'
        required: false
        type: boolean
        default: true
      custom_rules_override:
        description: 'Use custom Flutter-specific rules (recommended for Flutter projects)'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  ai-implementation:
    name: AI Code Implementation
    uses: IstiN/dmtools-agentic-workflows/.github/workflows/reusable-gemini-implementation.yml@main
    with:
      user_request: ${{ inputs.user_request }}
      model: ${{ inputs.model }}
      pr_base_branch: ${{ inputs.pr_base_branch }}
      enable_debug_logging: ${{ inputs.enable_debug_logging }}
      
      # Flutter-specific customizations
      custom_implementation_prompt: ${{ inputs.custom_rules_override && '.github/ai-prompts/flutter-implementation-prompt.md' || '' }}
      custom_rules_file: ${{ inputs.custom_rules_override && '@commonrules.mdc' || '' }}
      additional_context_files: ${{ inputs.custom_rules_override && 'README.md,pubspec.yaml,analysis_options.yaml,flutter_styleguide/README.md' || '' }}
      
      # Use specific version for stability
      workflows_repo: 'IstiN/dmtools-agentic-workflows'
      workflows_ref: 'main'
      
    secrets:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
